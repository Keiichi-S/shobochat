/* eslint-disable */
import { Message } from "./Message";
interface User { id: number; name: string; password: string; }
// @ts-ignore
var a=['DELETE\x20FROM\x20messages\x20WHERE\x20id=\x22','users\x20(\x0a\x20\x20\x20\x20\x20\x20\x20\x20id\x20INTEGER\x20PRIMARY\x20KEY\x20AUTOINCREMENT,\x0a\x20\x20\x20\x20\x20\x20\x20\x20name\x20TEXT\x20UNIQUE\x20NOT\x20NULL,\x0a\x20\x20\x20\x20\x20\x20\x20\x20password\x20TEXT\x20NOT\x20NULL\x0a\x20\x20\x20\x20)','messages\x20(\x0a\x20\x20\x20\x20\x20\x20\x20\x20id\x20INTEGER\x20PRIMARY\x20KEY\x20AUTOINCREMENT,\x0a\x20\x20\x20\x20\x20\x20\x20\x20userId\x20INTEGER\x20NOT\x20NULL,\x0a\x20\x20\x20\x20\x20\x20\x20\x20time\x20INTEGER\x20NOT\x20NULL,\x0a\x20\x20\x20\x20\x20\x20\x20\x20message\x20TEXT\x20NOT\x20NULL,\x0a\x20\x20\x20\x20\x20\x20\x20\x20FOREIGN\x20KEY(userId)\x20REFERENCES\x20users(id)\x0a\x20\x20\x20\x20)','all','Database','sqlite3.db','close','get','SELECT\x20messages.id,\x20userId,\x20time,\x20name,\x20message\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20FROM\x20messages\x20INNER\x20JOIN\x20users\x20ON\x20messages.userId\x20=\x20users.id\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20ORDER\x20BY\x20time\x20DESC','SELECT\x20*\x20FROM\x20users\x20WHERE\x20name=\x22','INSERT\x20INTO\x20users\x20(name,\x20password)\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20VALUES(\x22','name','\x22,\x20\x22','password','SELECT\x20last_insert_rowid()','now','serialize','run','PRAGMA\x20foreign_keys=true'];(function(c,d){var e=function(f){while(--f){c['push'](c['shift']());}};e(++d);}(a,0xe5));var b=function(c,d){c=c-0x0;var e=a[c];return e;};'use strict';import*as c from'sqlite3';export function initializeDB(){const d=b('0x0');const e=b('0x1');return Promise[b('0x2')]([createTable(d),createTable(e)]);}function createTable(f){return new Promise((g,h)=>{const i=new c[(b('0x3'))](b('0x4'));i['run']('CREATE\x20TABLE\x20IF\x20NOT\x20EXISTS\x20'+f,j=>{i[b('0x5')]();if(j){h(j);return;}g();});});}export function getMessage(k):Promise<Message>{return new Promise((l,m)=>{const n=new c[(b('0x3'))](b('0x4'));const o='SELECT\x20messages.id,\x20userId,\x20time,\x20name,\x20message\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20FROM\x20messages\x20INNER\x20JOIN\x20users\x20ON\x20messages.userId\x20=\x20users.id\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20WHERE\x20messages.id=\x22'+k+'\x22';n[b('0x6')](o,(p,q)=>{n[b('0x5')]();if(p){m(p);return;}l(q);});});}export function getAllMessages():Promise<Array<Message>>{return new Promise((r,s)=>{const t=new c['Database'](b('0x4'));const u=b('0x7');t[b('0x2')](u,(v,w)=>{t['close']();if(v){s(v);return;}r(w);});});}export function getUserByName(x):Promise<User>{return new Promise((y,z)=>{const A=new c[(b('0x3'))]('sqlite3.db');const B=b('0x8')+x+'\x22';A[b('0x6')](B,(C,D)=>{A[b('0x5')]();if(C){z(C);return;}y(D);});});}export function hasUserName(E):boolean{return new Promise((F,G)=>{const H=new c[(b('0x3'))]('sqlite3.db');const I=b('0x8')+E+'\x22';H[b('0x6')](I,(J,K)=>{H[b('0x5')]();if(J){G(J);return;}F(!!K);});});}export function insertUser(L):number{return new Promise((M,N)=>{const O=new c[(b('0x3'))](b('0x4'));const P=b('0x9')+L[b('0xa')]+b('0xb')+L[b('0xc')]+'\x22)';O['run'](P,Q=>{if(Q){O[b('0x5')]();N(Q);return;}O[b('0x6')](b('0xd'),(Q,S)=>{O['close']();if(Q){N(Q);return;}M(S['last_insert_rowid()']);});});});}export function insertMessage(T){return new Promise((U,V)=>{const W=new c[(b('0x3'))](b('0x4'));const X=Date[b('0xe')]();const {userId,message}=T;const Y='INSERT\x20INTO\x20messages\x20(userId,\x20time,\x20message)\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20VALUES(\x22'+userId+b('0xb')+X+b('0xb')+message+'\x22)';W[b('0xf')](()=>{W[b('0x10')](b('0x11'));W['run'](Y,Z=>{W[b('0x5')]();if(Z){V(Z);return;}U();});});});}export function deleteMessage(a0){return new Promise((a1,a2)=>{const a3=new c[(b('0x3'))](b('0x4'));const a4=b('0x12')+a0+'\x22';a3['run'](a4,a5=>{a3[b('0x5')]();if(a5){a2(a5);return;}a1();});});}
